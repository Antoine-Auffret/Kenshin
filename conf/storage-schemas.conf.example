# Schema definitions for kenshin files. Entries are scanned in order,
# and first match wins. This file is scanned for changes every 60 seconds.
#
# Definition Syntax:
#
#    [name]
#    pattern = regex
#    xFilesFactor = xff
#    aggregationMethod = agg
#    retentions = timePerPoint:timeToStore, timePerPoint:timeToStore, ...
#    cacheRetention = seconds
#    metricsPerFile = num
#
# Remember: To support accurate aggregation from higher to lower resolution
#           archives, the precision of a longer retention archive must be
#           cleanly divisible by precision of next lower retention archive.
#
#           Valid:    60s:7d,300s:30d (300/60 = 5)
#           Invalid:  180s:7d,300s:30d (300/180 = 3.333)
#

[metric-test]
pattern = .*metric_test.*
xFilesFactor = 1
aggregationMethod = average
retentions = 1s:1h,6s:2h
cacheRetention = 10s
metricsPerFile = 8

[rurouni-stats]
pattern = ^rurouni\.
xFilesFactor = 20.0
aggregationMethod = average
retentions = 60s:2d,300s:7d,15m:25w,12h:5y
cacheRetention = 600s
metricsPerFile = 8

[default]
pattern = .*
retentions = 10s:12h,60s:2d,300s:7d,15m:25w,12h:5y
xFilesFactor = 20
aggregationMethod = average
metricsPerFile = 8
cacheRetention = 620s
